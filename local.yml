version: '3'

volumes:
  lwmdb_local_postgres_data: {}
  lwmdb_local_postgres_data_backups: {}
  #  lwmdb_local_jupyter_hub: {}

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    image: lwmdb_local_django
    container_name: lwmdb_local_django
    # expose:
    #   - "8000"
    depends_on:
      - postgres
      - mailhog
      # - redis
    volumes:
      - .:/app:z
    env_file:
      - ./.envs/local
    ports:
      # - '8000:8000'
      - '9090:9090' # For Jupyter
    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: lwmdb_production_postgres
    container_name: lwmdb_local_postgres
    volumes:
      - lwmdb_local_postgres_data:/var/lib/postgresql/data:Z
      - lwmdb_local_postgres_data_backups:/backups:z
    env_file:
      - ./.envs/local
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U $${POSTGRES_USER}']
      interval: 5s
      timeout: 5s
      retries: 5

  kroki:
    image: yuzutech/kroki
    container_name: lwmdb_kroki
    environment:
      - KROKI_MAX_URI_LENGTH=800000
      - KROKI_LISTEN=0.0.0.0:9100
    ports:
      # - '8000:8000'
      - '9100:9100' # For local rendering

  # nginx-proxy:
  #   image: jwilder/nginx-proxy:alpine
  #   container_name: nginx-proxy
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #     # - "5000:5000"
  #     # - "5010:5010"
  #   volumes:
  #     - /var/run/docker.sock:/tmp/docker.sock:ro
  #     - ./certs:/etc/nginx/certs
  #   restart: always
  #   depends_on:
  #     - django

  # jupyterhub:
  #   build:
  #     context: .
  #     dockerfile: ./compose/production/jupyterhub/Dockerfile
  #   ports:
  #     - '3000:3000'
  #     - '0:0'

  docs:
    image: lwmdb_local_docs
    container_name: lwmdb_local_docs
    build:
      context: .
      dockerfile: ./compose/local/docs/Dockerfile
    env_file:
      - ./.envs/local
    volumes:
      - .:/app:z
    ports:
      - '8000:8000'
        # command: serve --dev-addr=0.0.0.0:8000

  mailhog:
    image: mailhog/mailhog:v1.0.0
    container_name: lwmdb_local_mailhog
    ports:
      - '8025:8025'

  # Only used with celery/flower when local
  # redis:
  #   image: redis:7
  #   container_name: lwmdb_local_redis

  # celeryworker:
  #   <<: *django
  #   image: lwmdb_local_celeryworker
  #   container_name: lwmdb_local_celeryworker
  #   depends_on:
  #     - redis
  #     - postgres
  #     - mailhog
  #   ports: []
  #   command: /start-celeryworker

  # celerybeat:
  #   <<: *django
  #   image: lwmdb_local_celerybeat
  #   container_name: lwmdb_local_celerybeat
  #   depends_on:
  #     - redis
  #     - postgres
  #     - mailhog
  #   ports: []
  #   command: /start-celerybeat

  # flower:
  #   <<: *django
  #   image: lwmdb_local_flower
  #   container_name: lwmdb_local_flower
  #   ports:
  #    - '5555:5555'
  #   command: /start-flower

  node:
    build:
      context: .
      dockerfile: ./compose/local/node/Dockerfile
    image: lwmdb_local_node
    container_name: lwmdb_local_node
    depends_on:
      - django
    volumes:
      - .:/app:z
        # http://jdlm.info/articles/2016/03/06/lessons-building-node-app-docker.html
      - /app/node_modules
    command: npm run dev
    ports:
      - '3000:3000'
        # Expose browsersync UI: https://www.browsersync.io/docs/options/#option-ui
      - '3001:3001'
