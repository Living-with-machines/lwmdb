# Generated by Django 4.2.5 on 2023-10-02 08:41

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("gazetteer", "0001_initial"),
        ("fulltext", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="DataProvider",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(default=None, max_length=600)),
                ("collection", models.CharField(default=None, max_length=600)),
                ("source_note", models.CharField(default=None, max_length=255)),
            ],
            options={
                "unique_together": {("name", "collection")},
            },
        ),
        migrations.CreateModel(
            name="Digitisation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("xml_flavour", models.CharField(default=None, max_length=255)),
                (
                    "software",
                    models.CharField(
                        blank=True, default=None, max_length=600, null=True
                    ),
                ),
                (
                    "mets_namespace",
                    models.CharField(
                        blank=True, default=None, max_length=255, null=True
                    ),
                ),
                (
                    "alto_namespace",
                    models.CharField(
                        blank=True, default=None, max_length=255, null=True
                    ),
                ),
            ],
            options={
                "unique_together": {("xml_flavour", "software")},
            },
        ),
        migrations.CreateModel(
            name="Ingest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("lwm_tool_name", models.CharField(default=None, max_length=600)),
                ("lwm_tool_version", models.CharField(default=None, max_length=600)),
                ("lwm_tool_source", models.CharField(default=None, max_length=255)),
            ],
            options={
                "unique_together": {("lwm_tool_name", "lwm_tool_version")},
            },
        ),
        migrations.CreateModel(
            name="Newspaper",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("publication_code", models.CharField(default=None, max_length=600)),
                ("title", models.CharField(default=None, max_length=255)),
                (
                    "location",
                    models.CharField(
                        blank=True, default=None, max_length=255, null=True
                    ),
                ),
                (
                    "place_of_publication",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="newspapers",
                        related_query_name="newspaper",
                        to="gazetteer.place",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Issue",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("issue_code", models.CharField(default=None, max_length=600)),
                ("issue_date", models.DateField()),
                ("input_sub_path", models.CharField(default=None, max_length=255)),
                (
                    "newspaper",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="issues",
                        related_query_name="issue",
                        to="newspapers.newspaper",
                        verbose_name="newspaper",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Item",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("item_code", models.CharField(default=None, max_length=600)),
                ("title", models.TextField(default=None, max_length=100)),
                (
                    "item_type",
                    models.CharField(
                        blank=True, default=None, max_length=600, null=True
                    ),
                ),
                ("word_count", models.IntegerField(db_index=True, null=True)),
                ("ocr_quality_mean", models.FloatField(blank=True, null=True)),
                ("ocr_quality_sd", models.FloatField(blank=True, null=True)),
                ("input_filename", models.CharField(default=None, max_length=255)),
                (
                    "data_provider",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="items",
                        related_query_name="item",
                        to="newspapers.dataprovider",
                        verbose_name="data_provider",
                    ),
                ),
                (
                    "digitisation",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="items",
                        related_query_name="item",
                        to="newspapers.digitisation",
                        verbose_name="digitisation",
                    ),
                ),
                (
                    "ingest",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="items",
                        related_query_name="item",
                        to="newspapers.ingest",
                        verbose_name="ingest",
                    ),
                ),
                (
                    "issue",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="items",
                        related_query_name="item",
                        to="newspapers.issue",
                        verbose_name="issue",
                    ),
                ),
                (
                    "fulltext",
                    models.OneToOneField(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="fulltext.fulltext",
                    ),
                ),
                ("title_char_count", models.IntegerField(null=True)),
                ("title_truncated", models.BooleanField(default=False)),
                ("title_word_count", models.IntegerField(null=True)),
                ("word_char_count", models.IntegerField(null=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddIndex(
            model_name="issue",
            index=models.Index(
                fields=["issue_code"], name="newspapers__issue_c_e41b28_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="item",
            index=models.Index(
                fields=["item_code"], name="newspapers__item_co_417bcf_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="newspaper",
            index=models.Index(
                fields=["publication_code"], name="newspapers__publica_bfbe2a_idx"
            ),
        ),
        migrations.AddField(
            model_name="dataprovider",
            name="code",
            field=models.SlugField(
                blank=True, default=None, max_length=100, null=True, unique=True
            ),
        ),
        migrations.AddField(
            model_name="dataprovider",
            name="legacy_code",
            field=models.SlugField(
                blank=True, default=None, max_length=100, null=True, unique=True
            ),
        ),
        migrations.AlterField(
            model_name="item",
            name="title_truncated",
            field=models.BooleanField(blank=True, default=None, null=True),
        ),
    ]
